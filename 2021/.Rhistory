# puzzle_input <- readLines("20221201input.txt")
puzzle_input <- readLines("20221201example.txt")
# puzzle_input <- readLines("20221201input.txt")
puzzle_input <- readLines("20221201example.txt")
puzzle_input
N <- nrow(puzzle_input)
N <- nchar(puzzle_input)
N
# brute
for(i 1:length(records)){
# brute
for(i in 1:length(records)){
print(puzzle_input[i])
}
# puzzle_input <- readLines("20221201input.txt")
puzzle_input <- readLines("20221201example.txt")
records <- nchar(puzzle_input)
# brute
for(i in 1:length(records)){
print(puzzle_input[i])
}
# puzzle_input <- readLines("20221201input.txt")
puzzle_input <- readLines("20221201example.txt")
records <- nchar(puzzle_input)
N <- length(records)
# data frame (to store information)
df <- data.frame(
elf = 1:N
calories = rep(0, N)
# puzzle_input <- readLines("20221201input.txt")
puzzle_input <- readLines("20221201example.txt")
records <- nchar(puzzle_input)
N <- length(records)
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
View(df)
# brute
for(i in 1:length(records)){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records != 0){
calories[elf_num] <- calories[elf_num] + as.numeric(calories[i])
} else {
elf_num <- elf_num + 1
}
}
# brute
for(i in 1:length(records)){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records != 0){
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(df$calories[i])
} else {
elf_num <- elf_num + 1
}
}
# brute
for(i in 1:length(records)){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records[i] != 0){
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(df$calories[i])
} else {
elf_num <- elf_num + 1
}
}
# brute
for(i in 1:N){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records[i] != 0){
print(df$calories[elf_num])
print(as.numeric(df$calories[i]))
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(df$calories[i])
} else {
elf_num <- elf_num + 1
}
}
# brute
for(i in 1:N){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records[i] != 0){
print(df$calories[elf_num])
print(as.numeric(df$calories[i]))
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
} else {
elf_num <- elf_num + 1
}
}
# brute
for(i in 1:N){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records[i] != 0){
print(df$calories[elf_num])
print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
} else {
elf_num <- elf_num + 1
}
}
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# brute force
for(i in 1:N){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records[i] != 0){
print(df$calories[elf_num])
print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
} else {
elf_num <- elf_num + 1
}
}
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# brute force
for(i in 1:N){
# print(puzzle_input[i])
# tracker
elf_num <- 1
if(records[i] != 0){
print(df$calories[elf_num])
print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
records == 0
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
print(df$calories[elf_num])
print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
print(df$calories[elf_num])
print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
print("The elf with the most calories has")
print(max(df$calories))
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
# print(df$calories[elf_num])
# print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
print("The elf with the most calories has")
print(max(df$calories))
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
# print(df$calories[elf_num])
# print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
print("The elf with the most calories has")
print(max(df$calories))
print("calories")
# initialization
puzzle_input <- readLines("20221201input.txt")
# puzzle_input <- readLines("20221201example.txt")
records <- nchar(puzzle_input)
N <- length(records)
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
# print(df$calories[elf_num])
# print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
print("The elf with the most calories has")
print(max(df$calories))
print("calories")
df2 <- df |>
arrange(desc(calories)) +
slice(1:3)
library("tidyverse")
library("tidyverse")
df2 <- df |>
arrange(desc(calories)) +
slice(1:3)
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(n = 3)
?slice_max
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(calories, n = 3)
View(df2)
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(calories, n = 3)
print("The elf trio with the most calories have")
print(sum(df$calories))
print("calories")
# initialization
# puzzle_input <- readLines("20221201input.txt")
puzzle_input <- readLines("20221201example.txt")
records <- nchar(puzzle_input)
N <- length(records)
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
# print(df$calories[elf_num])
# print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
print("The elf with the most calories has")
print(max(df$calories))
print("calories")
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(calories, n = 3)
print("The elf trio with the most calories have")
print(sum(df$calories))
print("calories")
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(calories, n = 3)
print("The elf trio with the most calories have")
print(sum(df$calories))
print("calories")
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(calories, n = 3)
print("The elf trio with the most calories have")
print(sum(df2$calories))
print("calories")
# initialization
puzzle_input <- readLines("20221201input.txt")
# puzzle_input <- readLines("20221201example.txt")
records <- nchar(puzzle_input)
N <- length(records)
# data frame (to store information)
df <- data.frame(
elf = 1:N,
calories = rep(0, N)
)
# tracker
elf_num <- 1
# brute force
for(i in 1:N){
# print(puzzle_input[i])
if(records[i] != 0){
# print(df$calories[elf_num])
# print(puzzle_input[i])
df$calories[elf_num] <- df$calories[elf_num] +
as.numeric(puzzle_input[i])
}
if(records[i] == 0){
elf_num <- elf_num + 1
}
}
print("The elf with the most calories has")
print(max(df$calories))
print("calories")
# df2 <- df |>
#   arrange(desc(calories)) +
#   slice(1:3)
df2 <- df |>
slice_max(calories, n = 3)
print("The elf trio with the most calories have")
print(sum(df2$calories))
print("calories")
