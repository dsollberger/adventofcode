subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal()
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
View(df)
for(t in 1:20){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
temp_plot <- df %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal()
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
?perimeter
T <- 1000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# temp_plot <- df %>%
# ggplot(aes(x = x, y = y)) +
# geom_point(size = 5) +
# labs(title = paste("t = ", t),
#      subtitle = "look for a message",
#      caption = "Advent of Code\nYear2018, Day 10") +
#   theme_minimal()
# get a sense of how far apart the dots are
perimeter[t] <- 2*(range(df$x) + range(df$y))
# dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
# ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
#        width = dev.size()[1],
#        height = dev.size()[2])
# dev.off()
}
range(df$x)
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 1000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# temp_plot <- df %>%
# ggplot(aes(x = x, y = y)) +
# geom_point(size = 5) +
# labs(title = paste("t = ", t),
#      subtitle = "look for a message",
#      caption = "Advent of Code\nYear2018, Day 10") +
#   theme_minimal()
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
# ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
#        width = dev.size()[1],
#        height = dev.size()[2])
# dev.off()
}
plot(perimeter)
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 10000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# temp_plot <- df %>%
# ggplot(aes(x = x, y = y)) +
# geom_point(size = 5) +
# labs(title = paste("t = ", t),
#      subtitle = "look for a message",
#      caption = "Advent of Code\nYear2018, Day 10") +
#   theme_minimal()
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
# ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
#        width = dev.size()[1],
#        height = dev.size()[2])
# dev.off()
}
plot(perimeter)
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 100000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# temp_plot <- df %>%
# ggplot(aes(x = x, y = y)) +
# geom_point(size = 5) +
# labs(title = paste("t = ", t),
#      subtitle = "look for a message",
#      caption = "Advent of Code\nYear2018, Day 10") +
#   theme_minimal()
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
# ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
#        width = dev.size()[1],
#        height = dev.size()[2])
# dev.off()
}
plot(perimeter)
which.min(perimeter)
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal()
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal()
dev.new(width = 1100, height = 314, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
if(t >= 10070 & t <= 10080){
temp_plot <- df %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal()
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
# if(t >= 10070 & t <= 10080){
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal() +
ylim(min(df$y) - 10, max(df$y + 10)))
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
# if(t >= 10070 & t <= 10080){
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal() +
ylim(min(df$y) - 10, max(df$y + 10))
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
# if(t >= 10070 & t <= 10080){
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = -y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal() +
ylim(min(df$y) - 10, max(df$y + 10))
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
# if(t >= 10070 & t <= 10080){
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = -1*y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal() +
ylim(min(df$y) - 10, max(df$y + 10))
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
puzzle_input <- readLines("20181210input.txt")
# puzzle_input <- readLines("20181210example.txt")
the_nums <- str_extract_all(puzzle_input, "-?(\\d)+")
N <- length(puzzle_input)
x <- rep(NA, N)
y <- rep(NA, N)
v_x <- rep(NA, N)
v_y <- rep(NA, N)
df <- data.frame(x, y, v_x, v_y)
for(i in 1:N){
these_nums <- as.numeric(the_nums[[i]])
df$x[i] <- these_nums[1]
df$y[i] <- these_nums[2]
df$v_x[i] <- these_nums[3]
df$v_y[i] <- these_nums[4]
}
T <- 11000
perimeter <- rep(NA, T)
for(t in 1:T){
#revise position
df$x <- df$x + df$v_x
df$y <- df$y + df$v_y
# get a sense of how far apart the dots are
perimeter[t] <- 2*(max(df$x) - min(df$x) + max(df$y) - min(df$y))
# plot(perimeter)
# which.min(perimeter) ==> t = 10076
# if(t >= 10070 & t <= 10080){
if(t == 10076){
temp_plot <- df %>%
ggplot(aes(x = x, y = -1*y)) +
geom_point(size = 5) +
labs(title = paste("t = ", t),
subtitle = "look for a message",
caption = "Advent of Code\nYear2018, Day 10") +
theme_minimal() +
ylim(min(-1*df$y) - 10, max(-1*df$y + 10))
dev.new(width = 1100, height = 628, units = "px", noRStudioGD = T)
ggsave(temp_plot, file = paste0("plot_", t, ".jpeg"),
width = dev.size()[1],
height = dev.size()[2])
dev.off()
}
}
